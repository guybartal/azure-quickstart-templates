{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSSName": {
      "type": "string",
      "metadata": {
        "description": "The Name of the VM Scale Set"
      }
    },
    "vnetname": {
      "type": "string",
      "metadata": {
        "description": "The Name of the existing VNET"
      }
    },
    "subnetname": {
      "type": "string",
      "metadata": {
        "description": "The Name of the existing subnet"
      }
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances to create in the scale set"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2"

      ],
      "metadata": {
        "description": "The size of the VM instances Created"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The Prefix for the DNS name of the new IP Address created"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The Username of the administrative user for each VM instance created"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Password of the administrative user for each VM instance created"
      }
    },
    "sourceImageVhdUri": {
      "type": "string",
      "metadata": {
        "description": "The source of the blob containing the custom image"
      }
    },
    "frontEndLBPort": {
      "type": "int",
      "metadata": {
        "description": "The front end port to load balance"
      },
      "defaultValue": 443
    },
    "backEndLBPort": {
      "type": "int",
      "metadata": {
        "description": "The front end port to load balance"
      },
      "defaultValue": 443
    },
    "probeIntervalInSeconds": {
      "type": "int",
      "metadata": {
        "description": "The interval between load balancer health probes"
      },
      "defaultValue": 15
    },
    "numberOfProbes": {
      "type": "int",
      "metadata": {
        "description": "The number of probes that need to fail before a VM instance is deemed unhealthy"
      },
      "defaultValue": 5
    },
    "artifactsLocation": {
      "defaultValue": "https://raw.githubusercontent.com/guybartal/azure-quickstart-templates/master/201-vmss-custom-image-with-custom-script-windows-with-ssl",
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "artifactsLocationSasToken": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
     "vaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of Key Vault that has a secret"
      }
    },
    "vaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group of Key Vault that has a secret"
      }
    },
    "secretUrlWithVersion": {
      "type": "string",
      "metadata": {
        "description": "Url of the certificate in Key Vault"
      }
    },
    "websitepassword": {
        "reference": {
          "keyVault": {
            "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
              },
          },
          "secretName": "websitepassword"
        }
  },
  "variables": {
    "publicIPAddressName": "[concat(parameters('vmSSName'),'_pip')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "nicName": "[concat(parameters('vmSSName'),'_nic')]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
    "lbName": "[concat(parameters('vmSSName'),'_lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFEName": "loadBalancerFrontEnd",
    "lbWebProbeName": "loadBalancerWebProbe",
    "lbBEAddressPool": "loadBalancerBEAddressPool",
    "lbFEIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFEName'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBEAddressPool'))]",
    "lbWebProbeID": "[concat(variables('lbID'),'/probes/',variables('lbWebProbeName'))]",
    "networkApi": "2016-03-30",
    "computeApi": "2016-03-30"
  },
  "resources": [
    {
      "apiVersion": "[variables('networkApi')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('networkApi')]",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFEName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBEAddressPool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "weblb",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('lbWebProbeID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('frontEndLBPort')]",
              "backendPort": "[parameters('backEndLBPort')]",
              "enableFloatingIP": false
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbWebProbeName')]",
            "properties": {
              "protocol": "tcp",
              "port": "[parameters('backEndLBPort')]",
              "intervalInSeconds": "[parameters('probeIntervalInSeconds')]",
              "numberOfProbes": "[parameters('numberOfProbes')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('computeApi')]",
      "name": "[parameters('vmSSName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "osType": "Windows",
              "image": {
                "uri": "[parameters('sourceImageVhdUri')]"
              }
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmSSName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "secrets": [
            {
              "sourceVault": {
                "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
              },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('secretUrlWithVersion')]",
                  "certificateStore": "My"
                }
              ]
            }
          ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "customScript",
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('artifactsLocation'), '/scripts/installapp.ps1', parameters('artifactsLocationSasToken'))]"
                    ]
                  },
                  "typeHandlerVersion": "1.8",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File installapp.ps1 '), parameters('websitepassword')]"
                  },
                  "type": "CustomScriptExtension"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic1",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "ip1",
                      "properties": {
                        "subnet": {
                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('vnetname')),'/subnets/',parameters('subnetname'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbBEAddressPoolID')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(variables('publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
      "type": "string"
    }
  }
}